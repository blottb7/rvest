#libraries
library(rvest)
library(dplyr)
library(tidyr)
library(stringr)

#read in and convert events
url <- 'https://en.wikipedia.org/wiki/Alpine_skiing_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
alpine <- html_nodes(webpage, 'td~ td+ td b')
alpine <- html_text(alpine)
alpine <- as.data.frame(alpine)

url <- 'https://en.wikipedia.org/wiki/Biathlon_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
biathlon <- html_nodes(webpage, '.wikitable b')
biathlon <- html_text(biathlon)
biathlon <- as.data.frame(biathlon)

url <- 'https://en.wikipedia.org/wiki/Bobsleigh_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
bobsleigh <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
bobsleigh <- html_text(bobsleigh)
bobsleigh <- as.data.frame(bobsleigh)

url <- 'https://en.wikipedia.org/wiki/Cross-country_skiing_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
cross_country <- html_nodes(webpage, '.wikitable b')
cross_country <- html_text(cross_country)
cross_country <- as.data.frame(cross_country)

url <- 'https://en.wikipedia.org/wiki/Curling_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
curling <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
curling <- html_text(curling)
curling <- as.data.frame(curling)

url <- 'https://en.wikipedia.org/wiki/Figure_skating_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
figure_skating <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
figure_skating <- html_text(figure_skating)
figure_skating <- as.data.frame(figure_skating)

url <- 'https://en.wikipedia.org/wiki/Freestyle_skiing_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
freestyle_skiing <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
freestyle_skiing <- html_text(freestyle_skiing)
freestyle_skiing <- as.data.frame(freestyle_skiing)

hockey <- as.data.frame(c("mens_hockey", "womens_hockey"))
names(hockey) <- "hockey"

url <- 'https://en.wikipedia.org/wiki/Luge_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
luge <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
luge <- html_text(luge)
luge <- as.data.frame(luge)

url <- 'https://en.wikipedia.org/wiki/Nordic_combined_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
nordic_combined <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
nordic_combined <- html_text(nordic_combined)
nordic_combined <- as.data.frame(nordic_combined)

url <- 'https://en.wikipedia.org/wiki/Short_track_speed_skating_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
short_track <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
short_track <- html_text(short_track)
short_track <- as.data.frame(short_track)

url <- 'https://en.wikipedia.org/wiki/Skeleton_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
skeleton <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
skeleton <- html_text(skeleton)
skeleton <- as.data.frame(skeleton)

url <- 'https://en.wikipedia.org/wiki/Ski_jumping_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
ski_jumping <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
ski_jumping <- html_text(ski_jumping)
ski_jumping <- as.data.frame(ski_jumping)

url <- 'https://en.wikipedia.org/wiki/Snowboarding_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
snowboarding <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
snowboarding <- html_text(snowboarding)
snowboarding <- as.data.frame(snowboarding)

url <- 'https://en.wikipedia.org/wiki/Speed_skating_at_the_2018_Winter_Olympics'
webpage <- read_html(url)
speed_skating <- html_nodes(webpage, '.plainrowheaders td:nth-child(1)')
speed_skating <- html_text(speed_skating)
speed_skating <- as.data.frame(speed_skating)

#function to create sport column from col name
col_name_fn <- function(df) {
  df$sport <- names(df)
  names(df)[1] <- "event"
  df
}

#assing col_name_fn to each sport
alpine <- col_name_fn(alpine)
biathlon <- col_name_fn(biathlon)
bobsleigh <- col_name_fn(bobsleigh)
cross_country <- col_name_fn(cross_country)
curling <- col_name_fn(curling)
figure_skating <- col_name_fn(figure_skating)
freestyle_skiing <- col_name_fn(freestyle_skiing)
hockey <- col_name_fn(hockey)
luge <- col_name_fn(luge)
nordic_combined <- col_name_fn(nordic_combined)
short_track <- col_name_fn(short_track)
skeleton <- col_name_fn(skeleton)
ski_jumping <- col_name_fn(ski_jumping)
snowboarding <- col_name_fn(snowboarding)
speed_skating <- col_name_fn(speed_skating)

#make df list and bind into one df
df_list <- list(alpine, biathlon, bobsleigh, cross_country, curling, figure_skating, freestyle_skiing, 
                hockey, luge, nordic_combined, short_track, skeleton, ski_jumping, snowboarding, speed_skating)
all_events <- bind_rows(df_list)

#clean events
  #remove "details" from char
all_events$event <- gsub("details", "", all_events$event)

#assign sporting group to each sport
all_events$sport_group <- all_events$sport

all_events$sport_group <- ifelse(all_events$sport_group == "bobsleigh" | all_events$sport_group == "skeleton" | all_events$sport_group == "luge",
                                 "sleds", all_events$sport_group)
all_events$sport_group <- ifelse(all_events$sport_group == "freestyle_skiing" | all_events$sport_group == "snowboarding",
                                 "freestyle_and_boards", all_events$sport_group)
all_events$sport_group <- ifelse(all_events$sport_group == "nordic_combined" | all_events$sport_group == "ski_jumping",
                                 "jumping", all_events$sport_group)
all_events$sport_group <- ifelse(all_events$sport_group == "short_track" | all_events$sport_group == "speed_skating",
                                 "speed_skating", all_events$sport_group)

saveRDS(all_events, "C:/Users/Ben/Desktop/R Projects/olympics/all_events_2018.rds")

#new_df <- readRDS("C:/Users/Ben/Desktop/R Projects/olympics/all_events_2018.rds")
